# This is a basic workflow to help you get started with Actions

name: SSHCI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
        inputs:
          NGROK_AUTH_TOKEN:
            discription: NGROK AUTH TOKEN
            required: true
            
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  SSHCI:
    runs-on: ubuntu-20.04
    timeout-minutes: 999999

    steps:
    - name: Stop firewall.
      run: |
       sudo ufw disable>>/dev/null
       sudo systemctl stop ufw>>/dev/null
    - name: Update.
      run: sudo apt-get update -y >>/dev/null
    - name: Install Package.
      run: sudo apt-get install -y openssh-server net-tools screen firewalld >>/dev/null
    - name: Setup Firewall.
      run: | 
        sudo systemctl enable firewalld >>/dev/null
        sudo systemctl start firewalld >>/dev/null
        sudo firewall-cmd --zone=public --add-interface=eth0 --permanent >>/dev/null
        sudo firewall-cmd --zone=public --add-service=http --permanent >>/dev/null
        sudo firewall-cmd --zone=public --add-service=ssh --permanent >>/dev/null
        sudo firewall-cmd --zone=public --add-protocol=tcp --permanent >>/dev/null
        sudo firewall-cmd --zone=public --add-protocol=udp --permanent >>/dev/null
        sudo firewall-cmd --zone=public --add-port=22/tcp --permanent >>/dev/null
        sudo firewall-cmd --zone=public --add-port=22/udp --permanent >>/dev/null
        sudo firewall-cmd --zone=public --add-port=4040/tcp --permanent >>/dev/null
        sudo firewall-cmd --zone=public --add-port=4040/udp --permanent >>/dev/null
        sudo firewall-cmd --zone=public --add-masquerade --permanent >>/dev/null
        sudo firewall-cmd --complete-reload >>/dev/null
    - name: Setup SSH.
      run: | 
        echo -e "VPSFree1324\nVPSFree1324\n" | sudo passwd root 
        sudo mkdir -p /var/run/sshd >>/dev/null
        sudo systemctl enable ssh >>/dev/null
        sudo wget -q -O /etc/ssh/sshd_config "https://github.com/ckpakbar23/VPS/raw/main/sshd_config"
        sudo bash -c  'echo -e "LD_LIBRARY_PATH=/usr/lib64-nvidia\nexport LD_LIBRARY_PATH" > /root/.bashrc'
        sudo service ssh reload >>/dev/null
        sudo systemctl restart ssh >>/dev/null
    - name: Account Info.
      run: | 
        sudo pip -q install pyngrok  >>/dev/null
        sudo ngrok authtoken $(echo ${{github.event.inputs.NGROK_AUTH_TOKEN}}) >>/dev/null
        sudo screen -dmS ngrok ngrok tcp 22
        sudo wget -q -O- "https://github.com/ckpakbar23/VPS/raw/main/ngrok.py" | sudo python
    - name: Loop.
      run: | 
        sudo wget -q -O- "https://github.com/ckpakbar23/VPS/raw/main/loop" | bash
